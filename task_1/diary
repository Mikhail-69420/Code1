Git:
•	Version Control
•	Branching and Merging
•	Collaboration
•	Tracking Changes
•	Distributed Development
•	Staging Area
•	Commit History
•	Conflict Resolution
•	Backup and Restore
•	Integration with Other Tools

Node.js:
•	Server-Side Development
•	Event-Driven Architecture
•	Building APIs
•	Single Language for Full-Stack Development
•	Package Management
•	Microservices
•	Real-Time Applications
•	Command Line Tools
•	Data Streaming
•	Proxy Server
•	Development of IoT Applications
•	Single-Page Applications (SPAs)

Visual:
•	Code Editing
•	Debugging
•	Project Management
•	Integrated Tools
•	Designing User Interfaces
•	Language Support
•	Extensions and Customization
•	Testing
•	Collaboration
•	Cross-Platform Development
•	Cloud Integration
•	Performance Profiling
•	Database Management




Stage:
    Stage is used to mark changes in your working directory as ready to be committed.

Commit:
    Commit saves all the staged changes into the local repository and gives unique IDs for each changes.

Fetch:
    Fetch is used to receive all information on changes from a remote-repository.

Pull:
    Pull is the combination of fetch and merge, it receives the information on changes from a remote-repository and implements it into the local repository.

Push:
    Push is used to implement all the commits saved on the local repository onto the remote-repository.

Merge:
    Merge combines the changes on different branches.



